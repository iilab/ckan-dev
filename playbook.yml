---
- hosts: all
  tasks:
  - name: Install Systemd for managing docker and job scheduling
    apt: pkg=systemd state=present
    sudo: yes

  - name: Install systemd in Grub
    lineinfile: dest=/etc/default/grub 'regexp=^GRUB_CMDLINE_LINUX=\"((?!.*?init=/bin/systemd).*?)\"$' 'line=GRUB_CMDLINE_LINUX="\1 init=/bin/systemd"' state=present backrefs=yes
    register: updated_grub
    sudo: yes

  - name: Update grub 
    command: update-grub
    when: updated_grub.changed
    sudo: yes

  - name: Restart the server after update grub 
    command: "shutdown -r now"
    when: updated_grub.changed
    sudo: yes

  # from http://stackoverflow.com/questions/22534033/how-can-i-use-ansible-playbook-to-reboot-a-ubuntu-server
  # this bit doesn't work
  # - name: Wait until the virtual machine stop ie. ssh port stop responding
  #  local_action: wait_for host={{ansible_ssh_host}} port={{ansible_ssh_port}} state=stopped
  #  sudo: false

  - name: Wait for server to come up after update grub 
    local_action: wait_for host={{ansible_ssh_host}} port={{ansible_ssh_port}} delay=30
    when: updated_grub.changed
    sudo: false

  - name: Docker | Install apt dependencies for ansible apt
    apt:
      pkg: "{{ item }}"
      state: latest
    with_items:
      - python-apt
      - apt-transport-https
    sudo: yes

  - name: Docker | Add docker.io apt key
    apt_key:
      keyserver: 'keyserver.ubuntu.com'
      id: A88D21E9
      state: present
    sudo: yes

  - name: Docker | Add docker.io ubuntu apt repository
    apt_repository:
      repo: 'deb https://get.docker.io/ubuntu docker main'
      state: present
    sudo: yes

  - name: Docker | Make sure docker and its dependencies are installed
    apt:
      pkg: "{{ item }}"
      state: present
    with_items:
      - lxc-docker
    sudo: yes

  - name: Clone docker-py repository
    git: repo=https://github.com/docker/docker-py.git dest=/opt/docker-py
    sudo: yes

  - name: Install python-setuptools
    apt: pkg=python-setuptools state=present
    sudo: yes

  - name: install docker-py
    command: python setup.py install chdir=/opt/docker-py creates=/usr/local/lib/python2.7/dist-packages/docker_py-0.6.1_dev-py2.7.egg
    sudo: yes

# From http://docs.ckan.org/en/latest/maintaining/installing/install-using-docker.html#installing-ckan
# docker run -d --name db ckan/postgresql
# docker run -d --name solr ckan/solr
# docker run -d -p 80:80 --link db:db --link solr:solr ckan/ckan

#  - name: Run postgresql image
#    docker: image="ckan/postgresql" name="db" state=running
#    sudo: yes

#  - name: Run solr image
#    docker: image="ckan/solr" name="solr" state=running
#    sudo: yes

#  - name: Run ckan image
#    docker: image="ckan/ckan" name="ckan" ports="80:80" links=db:db,solr:solr state=running
#    sudo: true

  - name: Install postgresql as a system ctl service
    copy: src=files/db.service dest=/etc/systemd/system/db.service
    sudo: yes

  - name: Install solr as a system ctl service
    copy: src=files/solr.service dest=/etc/systemd/system/solr.service
    sudo: yes

  - name: Install ckan as a system ctl service
    copy: src=files/ckan.service dest=/etc/systemd/system/ckan.service
    sudo: yes

  - name: Reload systemctl
    command: systemctl --system daemon-reload
    sudo: yes

  - name: Enable and restart db
    service: name=db.service enabled=yes state=restarted
    sudo: yes

  - name: Enable and restart solr
    service: name=solr.service enabled=yes state=restarted
    sudo: yes

  - name: Enable and restart ckan
    service: name=ckan.service enabled=yes state=restarted
    sudo: yes
